# -*- coding: utf-8 -*-
from __future__ import annotations

from typing import Mapping
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

State = Mapping[str, object]

def _mark(text: str, selected: bool) -> str:
    return f"‚úÖ {text}" if selected else text

def luma_options_kb(state: State) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    has_video = bool(state.get("video_file_id"))
    has_prompt = bool(state.get("prompt"))
    intensity = int(state.get("intensity") or 1)

    # –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –æ–ø—Ü–∏–∏
    builder.row(
        InlineKeyboardButton(text=_mark("–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç", has_prompt), callback_data="luma:prompt:input"),
        InlineKeyboardButton(text=_mark("–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ", has_video), callback_data="luma:video:attach"),
    )

    # –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è; –º–æ–∂–Ω–æ –Ω–∞–∂–∏–º–∞—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç)
    builder.row(
        InlineKeyboardButton(text=f"üéöÔ∏è –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: x{intensity}", callback_data="luma:intensity:cycle"),
    )

    builder.row(InlineKeyboardButton(text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data="luma:generate"))
    builder.row(
        InlineKeyboardButton(text="üîÅ –°–±—Ä–æ—Å", callback_data="luma:reset"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="luma:back"),
    )
    return builder.as_markup()
